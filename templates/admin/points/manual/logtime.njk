{% extends "base.njk" %}
{% set title = "Points assigner" %}

{% block content %}
<nav aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/admin">Admin</a></li>
		<li class="breadcrumb-item"><a href="/admin/points/manual">Points Assigner</a></li>
		<li class="breadcrumb-item active" aria-current="page">{{ manual_type }}</li>
	</ol>
</nav>

<form class="row g-3 mb-3" id="searchfilterform">
	<div class="col">
		<select id="searchfilter" name="searchfilter" class="form-select" required>
			<option value="" selected disabled hidden>Choose a filter</option>
			<option value="none">No filter</option>
			<option value="login">Login</option>
			<option value="id">Location ID</option>
		</select>
	</div>
	<div class="col">
		<input type="text" id="searchfilterval" name="searchfilterval" class="form-control" placeholder="Filter value..." required>
	</div>
	<div class="col">
		<button type="submit" class="btn btn-primary" id="searchfilterbtn">Search</button>
	</div>
</form>

<table class="table table-striped" id="results">
	<thead>
		<tr>
			<th scope="col" data-key="id">ID</th>
			<th scope="col" data-key="user.login" data-format="login">Login</th>
			<th scope="col" data-key="host">Host</th>
			<th scope="col" data-key="begin_at" data-format="datetime">Begin</th>
			<th scope="col" data-key="end_at" data-format="datetime">End</th>
		</tr>
	</thead>
	<tbody id="search-results">

	</tbody>
</table>

<nav aria-label="Page navigation" class="d-flex justify-content-center" id="pagenav"></nav>

<script src="/js/reactive-button.js"></script>
<script src="/js/apisearcher-table.js"></script>
<script>
const apiSearcher = new ApiSearcherTable({
	url: window.location.origin + '/admin/apisearch/locations/',
	results: '#results',
	filterSelector: '#searchfilter',
	filterValue: '#searchfilterval',
	filterForm: '#searchfilterform',
	pageNav: '#pagenav',
	pointsCalculator: function(data) {
		const beginAt = new Date(data.begin_at);
		const endAt = new Date(data.end_at);
		const duration = (endAt.getTime() - beginAt.getTime()) / 1000;
		const basePoints = {{ fixedPointType.point_amount }}; // points per hour
		const points = Math.floor(duration / 3600 * basePoints);
		return points;
	},
	actions: [
		{
			name: 'Trigger',
			url: window.location.origin + '/admin/points/trigger/{{ fixedPointType.type }}/id/', // id will be appended
			background: true, // background request, set to false to open in the same tab instead
		}
	]
});
</script>
{% endblock %}
